#!/usr/bin/env bash

set -x

sys=$(uname -s | tr '[:upper:]' '[:lower:]')
name=${2:-$(hostname)}

nixos() {
  cat /etc/os-release | grep -q 'NAME=NixOS'
}

do_bld() {
  nix --extra-experimental-features "nix-command flakes" build $1
}

build() {
  git add . -A
  if [ $sys == darwin ]; then
    do_bld .#darwinConfigurations.$name.system
  elif [ $sys == linux ]; then
    if ! nixos ; then
      do_bld .#homeConfigurations.user.activationPackage
    fi
  fi
}

home() {
  nixos && do_bld .#homeConfigurations.user.activationPackage || exit
  ./result/activate
  # do_bld .#nixosConfigurations.x1.config.system.build.toplevel
  # do_bld .#homeConfigurations.user.activationPackage
  # do_bld .#nixConfigurations."$name".config.system.build.toplevel
}

system() {
  nixos && sudo nixos-rebuild switch --flake .#x1 || exit
}

case $1 in
  "home")
    build && home;;
  "system")
    build && system;;
  "sys")
    build && system;;
  "both")
    build && home && system;;
  "")
    build && home && system;;
  *)
    echo "expected 'home' or 'system'";;
esac
